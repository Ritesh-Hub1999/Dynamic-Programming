question link: https://leetcode.com/problems/coin-change/

Example 1:
---------
Input: coins = [1,2,5], amount = 11
Output: 3
Explanation: 11 = 5 + 5 + 1


Example 2:
--------
Input: coins = [2], amount = 3
Output: -1

Approch
-------
step 1-> hum har coin use karenga amount ko zero krna ka lia ans usa ek variable mai store karenga
base-case
--------
step 2-> jaisa zero hua tho return zero karenga qki bina coin ka zero banainga
base-case
---------
step 3-> agr amount negative mai chala jai tho apan INT_MAX return karenga 

step 4-> mini mai store karenga min ans+1 ans return kr denga mini ko.

int solve(vector<int>& coins, int amount){
        // base case
        // agr amount 0 hojai minus krta hua coins sa tho zero return kr dena
        // bina coin ka zero banainga
        
        if(amount == 0){
            return 0;
        }
        //agr amount minus mai chala jai tho return kr dena INT_MAX
        if(amount < 0){
            return INT_MAX;
        }
        
        int mini = INT_MAX;
        
        for(int i=0;i<coins.size();i++){
            int ans = solve(coins,amount - coins[i]) ;
            if(ans!=INT_MAX){
                mini = min(ans + 1,mini);
            }
        }
    
        return mini;
    }
    
    int solveMem(vector<int>& coins, int amount,vector<int>& dp){
        //base case
        //agr amount 0 hojai minus krta hua coins sa tho zero return kr dena
        if(amount == 0){
            return 0;
        }
        //agr amount minus mai chala jai tho return kr dena INT_MAX
        if(amount < 0){
            return INT_MAX;
        }
        
        //step 3:
        if(dp[amount]!=-1){
            return dp[amount];
        }
        
        int mini = INT_MAX;
        
        for(int i=0;i<coins.size();i++){
            int ans = solveMem(coins,amount - coins[i],dp);
            if(ans!=INT_MAX){
                mini = min(ans+1,mini);
            }
        }
        //step 2: store ans in DP array
        dp[amount]=mini;
        return mini;
    }
    
    int coinChange(vector<int>& coins, int amount) {
        int count=0;
        //step 1: for DP we need to create DP array
        vector<int>dp(amount+1,-1);
        int ans=solveMem(coins,amount,dp);
        if(ans == INT_MAX){
            return -1;
        }
        
        else{
            return ans;
        }
    }
