https://leetcode.com/problems/combination-sum/description/

Example 1:
----------
Input: candidates = [2,3,6,7], target = 7
Output: [[2,2,3],[7]]
Explanation:
2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.
7 is a candidate, and 7 = 7.
These are the only two combinations.

Example 2:
---------
Input: candidates = [2,3,5], target = 8
Output: [[2,2,2,2],[2,3,3],[3,5]]

Example 3:
---------
Input: candidates = [2], target = 1
Output: []

Approch:
-------
hum yaha target ko 0 banan ka kosis karenga and include karenga array ka val ko.

step1 : har ek value sa 0 banana ko dekhenga, question mai dia hai koi bhi value 
        ko unlimited time le sakta hai.
        So, hum "include" ka game khelenga
                 --------
        hum jis index pe hai us value sa zero bana ki kosis karenga
 
step2 : agr nai ban pai zero tab aga bardha denga index
        So, hum "exclude" ka game khelenga
                 -------
                 
Code:
----
void solve(vector<int>& candidates, int target,vector<vector<int>>& ans,vector<int>& output,int i){
        //basecase
        if(target == 0){
            ans.push_back(output);
            return;
        }

        if(i >= candidates.size() || target < 0){
            return;
        }

        //include hum yaha pehla sara pehla index sa form karka dekh rha hai 0 ban rha hai
        output.push_back(candidates[i]);
        solve(candidates,target - candidates[i],ans,output,i);
        output.pop_back();

        //exclude karenga agr us index sa nai banega tho aga bardh jainga
        solve(candidates,target,ans,output,i+1);

    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> output;
        solve(candidates,target,ans,output,0);
        return ans;
    }
